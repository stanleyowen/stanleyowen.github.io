"use strict";var version="v1::",offlineFundamentals=["https://stanleyowen.github.io/","https://stanleyowen.github.io/css/style.min.css","https://stanleyowen.github.io/js/jquery.min.js","https://stanleyowen.github.io/js/main.min.js","https://stanleyowen.github.io/js/fa.min.js","https://stanleyowen.github.io/index.html","https://stanleyowen.github.io/contact/index.html"];self.addEventListener("install",(function(event){event.waitUntil(caches.open(version+"fundamentals").then((function(cache){return cache.addAll(offlineFundamentals)})).then((function(){console.log("WORKER: install completed")})))})),self.addEventListener("fetch",(function(event){console.log("WORKER: fetch event in progress."),"GET"===event.request.method?event.respondWith(caches.match(event.request).then((function(cached){var networked=fetch(event.request).then(fetchedFromNetwork,unableToResolve).catch(unableToResolve);return console.log("WORKER: fetch event",cached?"(cached)":"(network)",event.request.url),cached||networked;function fetchedFromNetwork(response){var cacheCopy=response.clone();return console.log("WORKER: fetch response from network.",event.request.url),caches.open(version+"pages").then((function add(cache){return cache.put(event.request,cacheCopy)})).then((function(){console.log("WORKER: fetch response stored in cache.",event.request.url)})),response}function unableToResolve(){return console.log("WORKER: fetch request failed in both cache and network."),new Response("<h1>Service Unavailable</h1>",{status:503,statusText:"Service Unavailable",headers:new Headers({"Content-Type":"text/html"})})}}))):console.log("WORKER: fetch event ignored.",event.request.method,event.request.url)})),self.addEventListener("activate",(function(event){console.log("WORKER: activate event in progress."),event.waitUntil(caches.keys().then((function(keys){return Promise.all(keys.filter((function(key){return!key.startsWith(version)})).map((function(key){return caches.delete(key)})))})).then((function(){console.log("WORKER: activate completed.")})))}));